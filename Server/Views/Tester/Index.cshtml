
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Tests</title>
</head>
<body>

    <h1>Tests</h1>
    <ul id="test-list"></ul>

    <style>

        body {
            font-family: Arial, Helvetica, sans-serif;
            margin: 0;
            background: #f2f2f2;
        }

        h1 {
            font-size: 3rem;
        }

        ul {
            list-style-type: none;
        }

        li {
            font-size: 1.5rem;
        }

        .failed {
            color: red;
        }

        .successed {
            color: green;
        }
    </style>

    <script>

        let list = document.getElementById("test-list");

        async function runTests() {
            let endpoints = [
              @foreach (var ep in ViewBag.endpoints)
              {
                @Html.Raw($"'{((string)ep)}',")
              }
            ]

            endpoints.forEach(endpoint => {
                runEndPointTest(endpoint);
            })
        }

        async function runEndPointTest(endpoint) {
            let result = await fetch(endpoint);
            let jsResult = await result.json();
            addResult({ endpoint, result: jsResult });
        }

        function addResult({ endpoint, result }) {
            let liResult = document.createElement("li");
            liResult.innerHTML = `${endpoint} : <span class="${resultStyle(result)}">${resultText(result)}</span>`;
            list.appendChild(liResult);
        }

        function resultStyle(result) {
            return result ? 'successed' : 'failed';
        }

        function resultText(result) {
            return result ? 'Ok' : 'Failed';
        }

        runTests();
    </script>
</body>
</html>
